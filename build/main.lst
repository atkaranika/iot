ARM GAS  /tmp/ccuotLD6.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Error_Handler:
  27              	.LFB956:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usart.h"
  22:Core/Src/main.c **** #include "tim.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** #include <string.h>
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.c **** #include "led.h"
ARM GAS  /tmp/ccuotLD6.s 			page 2


  31:Core/Src/main.c **** #include "storage.h"
  32:Core/Src/main.c **** #include "sample-lib.h"
  33:Core/Src/main.c **** #include <stdlib.h>
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END Includes */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PD */
  44:Core/Src/main.c **** #define DS18B20_PORT GPIOA
  45:Core/Src/main.c **** #define DS18B20_PIN GPIO_PIN_1
  46:Core/Src/main.c **** #define MAX_SIZE_RECEIVE 30
  47:Core/Src/main.c **** /* USER CODE END PD */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  50:Core/Src/main.c **** /* USER CODE BEGIN PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PM */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE BEGIN PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** // p1s2 variables //
  59:Core/Src/main.c ****   
  60:Core/Src/main.c **** // transmiter messages //
  61:Core/Src/main.c **** uint8_t TxMessage[] = "\n\r ping\n\r";
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** // receiver messages //
  64:Core/Src/main.c **** uint8_t RxMessage[MAX_SIZE_RECEIVE] = {'\0'};
  65:Core/Src/main.c **** int txrx ;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PV */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  70:Core/Src/main.c **** void SystemClock_Config(void);
  71:Core/Src/main.c **** void PeriphCommonClock_Config(void);
  72:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* USER CODE END PFP */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  77:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* USER CODE END 0 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /**
  82:Core/Src/main.c ****   * @brief  The application entry point.
  83:Core/Src/main.c ****   * @retval int
  84:Core/Src/main.c ****   */
  85:Core/Src/main.c **** int main(void)
  86:Core/Src/main.c **** {
  87:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
ARM GAS  /tmp/ccuotLD6.s 			page 3


  88:Core/Src/main.c ****    txrx = 1; // transmitter  1, receiver 0//
  89:Core/Src/main.c ****   // txrx = 0;
  90:Core/Src/main.c ****   /* USER CODE END 1 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  95:Core/Src/main.c ****   HAL_Init();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END Init */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Configure the system clock */
 102:Core/Src/main.c ****   SystemClock_Config();
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /* Configure the peripherals common clocks */
 105:Core/Src/main.c ****   PeriphCommonClock_Config();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END SysInit */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Initialize all configured peripherals */
 112:Core/Src/main.c ****   MX_GPIO_Init();
 113:Core/Src/main.c ****   MX_USART1_UART_Init();
 114:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 115:Core/Src/main.c ****   MX_TIM2_Init();
 116:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE END 2 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* Infinite loop */
 121:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 122:Core/Src/main.c ****   /********************** DHT11 *********************/
 123:Core/Src/main.c ****   
 124:Core/Src/main.c ****   while (1)
 125:Core/Src/main.c ****   {
 126:Core/Src/main.c ****    
 127:Core/Src/main.c ****     // ============================= P1S2 ====================== //
 128:Core/Src/main.c ****     
 129:Core/Src/main.c ****     //   ***********************  TRANSMITTER *********************************  //
 130:Core/Src/main.c ****     // Wait for User push-button (SW1) press before starting the Communication   //
 131:Core/Src/main.c ****     // After user pushes the SW1, transmitter board sends a message to receiver  //
 132:Core/Src/main.c ****     // Blue led remains turned on for 2'' to indicate that the message has sent  //
 133:Core/Src/main.c ****   
 134:Core/Src/main.c ****     if (txrx)
 135:Core/Src/main.c ****       {
 136:Core/Src/main.c ****         printf("transmitter starts\n\r");
 137:Core/Src/main.c ****         // read the state of button 1 //
 138:Core/Src/main.c ****          if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4) == 1)
 139:Core/Src/main.c ****            {   
 140:Core/Src/main.c ****               printf("pushed button\n\r");
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****               // send a message to receiver //
 143:Core/Src/main.c ****               HAL_UART_Transmit(&hlpuart1, TxMessage, strlen((char*)TxMessage), 0xFFFF);
 144:Core/Src/main.c **** 
ARM GAS  /tmp/ccuotLD6.s 			page 4


 145:Core/Src/main.c ****               HAL_Delay(500);
 146:Core/Src/main.c ****               
 147:Core/Src/main.c ****               // led blue state becomes off to indicate that a message has just been received //
 148:Core/Src/main.c ****               set_led(LED_BLUE, LED_OFF); 
 149:Core/Src/main.c ****               txrx = 0;
 150:Core/Src/main.c ****           }
 151:Core/Src/main.c ****       }
 152:Core/Src/main.c ****     //   ***********************  RECEIVER ********************************* //
 153:Core/Src/main.c ****     // waits for 2'' to receive a message                                    //
 154:Core/Src/main.c ****     else 
 155:Core/Src/main.c ****       {
 156:Core/Src/main.c ****         RxMessage[0] = '\0';
 157:Core/Src/main.c ****         printf("Receiver starts!\n\r");
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****         // receive a message //
 160:Core/Src/main.c ****         HAL_UART_Receive(&hlpuart1, RxMessage, MAX_SIZE_RECEIVE, 1000);
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****         // if message received //
 163:Core/Src/main.c ****         if (RxMessage != '\0')
 164:Core/Src/main.c ****           {
 165:Core/Src/main.c ****             printf("received message: %s\n\r", RxMessage);
 166:Core/Src/main.c ****             // led blue state becomes on to indicate that a message has just been received //
 167:Core/Src/main.c ****             set_led(LED_BLUE, LED_ON); 
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****             // duration that blue led will be turned on //
 170:Core/Src/main.c ****             HAL_Delay(100);
 171:Core/Src/main.c ****             // turn off led blue //
 172:Core/Src/main.c ****             set_led(LED_BLUE, LED_OFF); 
 173:Core/Src/main.c ****             txrx = 1;
 174:Core/Src/main.c ****           }
 175:Core/Src/main.c ****       }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****     // ============================= P1S2 ====================== //
 178:Core/Src/main.c ****    
 179:Core/Src/main.c ****     // ============================= P1S1 ====================== //
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****     //hello_world();
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****     // ============================= P1S1 ====================== //
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** 	  
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****     /* USER CODE END WHILE */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c ****   /* USER CODE END 3 */
 193:Core/Src/main.c **** }
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** /**
 196:Core/Src/main.c ****   * @brief System Clock Configuration
 197:Core/Src/main.c ****   * @retval None
 198:Core/Src/main.c ****   */
 199:Core/Src/main.c **** void SystemClock_Config(void)
 200:Core/Src/main.c **** {
 201:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  /tmp/ccuotLD6.s 			page 5


 202:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 205:Core/Src/main.c ****   */
 206:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 207:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 208:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 209:Core/Src/main.c ****   */
 210:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 211:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 212:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 213:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 215:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 216:Core/Src/main.c ****   {
 217:Core/Src/main.c ****     Error_Handler();
 218:Core/Src/main.c ****   }
 219:Core/Src/main.c ****   /** Configure the SYSCLKSource, HCLK, PCLK1 and PCLK2 clocks dividers
 220:Core/Src/main.c ****   */
 221:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK4|RCC_CLOCKTYPE_HCLK2
 222:Core/Src/main.c ****                               |RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 223:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 224:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 225:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 226:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 227:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 228:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK2Divider = RCC_SYSCLK_DIV1;
 229:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK4Divider = RCC_SYSCLK_DIV1;
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 232:Core/Src/main.c ****   {
 233:Core/Src/main.c ****     Error_Handler();
 234:Core/Src/main.c ****   }
 235:Core/Src/main.c **** }
 236:Core/Src/main.c **** 
 237:Core/Src/main.c **** /**
 238:Core/Src/main.c ****   * @brief Peripherals Common Clock Configuration
 239:Core/Src/main.c ****   * @retval None
 240:Core/Src/main.c ****   */
 241:Core/Src/main.c **** void PeriphCommonClock_Config(void)
 242:Core/Src/main.c **** {
 243:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /** Initializes the peripherals clock
 246:Core/Src/main.c ****   */
 247:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SMPS;
 248:Core/Src/main.c ****   PeriphClkInitStruct.SmpsClockSelection = RCC_SMPSCLKSOURCE_HSI;
 249:Core/Src/main.c ****   PeriphClkInitStruct.SmpsDivSelection = RCC_SMPSCLKDIV_RANGE0;
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 252:Core/Src/main.c ****   {
 253:Core/Src/main.c ****     Error_Handler();
 254:Core/Src/main.c ****   }
 255:Core/Src/main.c ****   /* USER CODE BEGIN Smps */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE END Smps */
 258:Core/Src/main.c **** }
ARM GAS  /tmp/ccuotLD6.s 			page 6


 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** /* USER CODE END 4 */
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** /**
 265:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 266:Core/Src/main.c ****   * @retval None
 267:Core/Src/main.c ****   */
 268:Core/Src/main.c **** void Error_Handler(void)
 269:Core/Src/main.c **** {
  29              		.loc 1 269 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 270:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 271:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 272:Core/Src/main.c ****   __disable_irq();
  35              		.loc 1 272 3 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccuotLD6.s 			page 7


  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
ARM GAS  /tmp/ccuotLD6.s 			page 8


  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
ARM GAS  /tmp/ccuotLD6.s 			page 9


 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
ARM GAS  /tmp/ccuotLD6.s 			page 10


 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 207 27 view .LVU2
  40              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 209 3 view .LVU3
  42              		.syntax unified
  43              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 273:Core/Src/main.c ****   while (1)
  51              		.loc 1 273 3 discriminator 1 view .LVU4
 274:Core/Src/main.c ****   {
 275:Core/Src/main.c ****   }
  52              		.loc 1 275 3 discriminator 1 view .LVU5
 273:Core/Src/main.c ****   while (1)
  53              		.loc 1 273 9 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE956:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	SystemClock_Config:
  67              	.LFB954:
 200:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  68              		.loc 1 200 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 104
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 00B5     		push	{lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 14, -4
  76 0002 9BB0     		sub	sp, sp, #108
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 112
 201:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 201 3 view .LVU8
 201:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  80              		.loc 1 201 22 is_stmt 0 view .LVU9
  81 0004 4822     		movs	r2, #72
  82 0006 0021     		movs	r1, #0
  83 0008 08A8     		add	r0, sp, #32
  84 000a FFF7FEFF 		bl	memset
  85              	.LVL0:
ARM GAS  /tmp/ccuotLD6.s 			page 11


 202:Core/Src/main.c **** 
  86              		.loc 1 202 3 is_stmt 1 view .LVU10
 202:Core/Src/main.c **** 
  87              		.loc 1 202 22 is_stmt 0 view .LVU11
  88 000e 0023     		movs	r3, #0
  89 0010 0193     		str	r3, [sp, #4]
  90 0012 0293     		str	r3, [sp, #8]
  91 0014 0393     		str	r3, [sp, #12]
  92 0016 0493     		str	r3, [sp, #16]
  93 0018 0593     		str	r3, [sp, #20]
  94 001a 0693     		str	r3, [sp, #24]
  95 001c 0793     		str	r3, [sp, #28]
 206:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
  96              		.loc 1 206 3 is_stmt 1 view .LVU12
  97              	.LBB6:
 206:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
  98              		.loc 1 206 3 view .LVU13
 206:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
  99              		.loc 1 206 3 view .LVU14
 100 001e 1849     		ldr	r1, .L9
 101 0020 0A68     		ldr	r2, [r1]
 102 0022 22F4C062 		bic	r2, r2, #1536
 103 0026 42F40072 		orr	r2, r2, #512
 104 002a 0A60     		str	r2, [r1]
 206:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 105              		.loc 1 206 3 view .LVU15
 106 002c 0A68     		ldr	r2, [r1]
 107 002e 02F4C062 		and	r2, r2, #1536
 108 0032 0092     		str	r2, [sp]
 206:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 109              		.loc 1 206 3 view .LVU16
 110 0034 009A     		ldr	r2, [sp]
 111              	.LBE6:
 206:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 112              		.loc 1 206 3 view .LVU17
 210:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 113              		.loc 1 210 3 view .LVU18
 210:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 114              		.loc 1 210 36 is_stmt 0 view .LVU19
 115 0036 0322     		movs	r2, #3
 116 0038 0892     		str	r2, [sp, #32]
 211:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 117              		.loc 1 211 3 is_stmt 1 view .LVU20
 211:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 118              		.loc 1 211 30 is_stmt 0 view .LVU21
 119 003a 4FF48032 		mov	r2, #65536
 120 003e 0992     		str	r2, [sp, #36]
 212:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 121              		.loc 1 212 3 is_stmt 1 view .LVU22
 212:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 122              		.loc 1 212 30 is_stmt 0 view .LVU23
 123 0040 4FF48072 		mov	r2, #256
 124 0044 0B92     		str	r2, [sp, #44]
 213:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 125              		.loc 1 213 3 is_stmt 1 view .LVU24
 213:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 126              		.loc 1 213 41 is_stmt 0 view .LVU25
ARM GAS  /tmp/ccuotLD6.s 			page 12


 127 0046 4022     		movs	r2, #64
 128 0048 0C92     		str	r2, [sp, #48]
 214:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 129              		.loc 1 214 3 is_stmt 1 view .LVU26
 214:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 130              		.loc 1 214 34 is_stmt 0 view .LVU27
 131 004a 1393     		str	r3, [sp, #76]
 215:Core/Src/main.c ****   {
 132              		.loc 1 215 3 is_stmt 1 view .LVU28
 215:Core/Src/main.c ****   {
 133              		.loc 1 215 7 is_stmt 0 view .LVU29
 134 004c 08A8     		add	r0, sp, #32
 135 004e FFF7FEFF 		bl	HAL_RCC_OscConfig
 136              	.LVL1:
 215:Core/Src/main.c ****   {
 137              		.loc 1 215 6 view .LVU30
 138 0052 88B9     		cbnz	r0, .L7
 221:Core/Src/main.c ****                               |RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 139              		.loc 1 221 3 is_stmt 1 view .LVU31
 221:Core/Src/main.c ****                               |RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 140              		.loc 1 221 31 is_stmt 0 view .LVU32
 141 0054 6F23     		movs	r3, #111
 142 0056 0193     		str	r3, [sp, #4]
 224:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 143              		.loc 1 224 3 is_stmt 1 view .LVU33
 224:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 144              		.loc 1 224 34 is_stmt 0 view .LVU34
 145 0058 0223     		movs	r3, #2
 146 005a 0293     		str	r3, [sp, #8]
 225:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 147              		.loc 1 225 3 is_stmt 1 view .LVU35
 225:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 148              		.loc 1 225 35 is_stmt 0 view .LVU36
 149 005c 0023     		movs	r3, #0
 150 005e 0393     		str	r3, [sp, #12]
 226:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 151              		.loc 1 226 3 is_stmt 1 view .LVU37
 226:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 152              		.loc 1 226 36 is_stmt 0 view .LVU38
 153 0060 0493     		str	r3, [sp, #16]
 227:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK2Divider = RCC_SYSCLK_DIV1;
 154              		.loc 1 227 3 is_stmt 1 view .LVU39
 227:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK2Divider = RCC_SYSCLK_DIV1;
 155              		.loc 1 227 36 is_stmt 0 view .LVU40
 156 0062 0593     		str	r3, [sp, #20]
 228:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK4Divider = RCC_SYSCLK_DIV1;
 157              		.loc 1 228 3 is_stmt 1 view .LVU41
 228:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK4Divider = RCC_SYSCLK_DIV1;
 158              		.loc 1 228 36 is_stmt 0 view .LVU42
 159 0064 0693     		str	r3, [sp, #24]
 229:Core/Src/main.c **** 
 160              		.loc 1 229 3 is_stmt 1 view .LVU43
 229:Core/Src/main.c **** 
 161              		.loc 1 229 36 is_stmt 0 view .LVU44
 162 0066 0793     		str	r3, [sp, #28]
 231:Core/Src/main.c ****   {
 163              		.loc 1 231 3 is_stmt 1 view .LVU45
ARM GAS  /tmp/ccuotLD6.s 			page 13


 231:Core/Src/main.c ****   {
 164              		.loc 1 231 7 is_stmt 0 view .LVU46
 165 0068 0121     		movs	r1, #1
 166 006a 01A8     		add	r0, sp, #4
 167 006c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 168              	.LVL2:
 231:Core/Src/main.c ****   {
 169              		.loc 1 231 6 view .LVU47
 170 0070 20B9     		cbnz	r0, .L8
 235:Core/Src/main.c **** 
 171              		.loc 1 235 1 view .LVU48
 172 0072 1BB0     		add	sp, sp, #108
 173              	.LCFI2:
 174              		.cfi_remember_state
 175              		.cfi_def_cfa_offset 4
 176              		@ sp needed
 177 0074 5DF804FB 		ldr	pc, [sp], #4
 178              	.L7:
 179              	.LCFI3:
 180              		.cfi_restore_state
 217:Core/Src/main.c ****   }
 181              		.loc 1 217 5 is_stmt 1 view .LVU49
 182 0078 FFF7FEFF 		bl	Error_Handler
 183              	.LVL3:
 184              	.L8:
 233:Core/Src/main.c ****   }
 185              		.loc 1 233 5 view .LVU50
 186 007c FFF7FEFF 		bl	Error_Handler
 187              	.LVL4:
 188              	.L10:
 189              		.align	2
 190              	.L9:
 191 0080 00040058 		.word	1476396032
 192              		.cfi_endproc
 193              	.LFE954:
 195              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 196              		.align	1
 197              		.global	PeriphCommonClock_Config
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	PeriphCommonClock_Config:
 204              	.LFB955:
 242:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 205              		.loc 1 242 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 80
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 00B5     		push	{lr}
 210              	.LCFI4:
 211              		.cfi_def_cfa_offset 4
 212              		.cfi_offset 14, -4
 213 0002 95B0     		sub	sp, sp, #84
 214              	.LCFI5:
 215              		.cfi_def_cfa_offset 88
 243:Core/Src/main.c **** 
ARM GAS  /tmp/ccuotLD6.s 			page 14


 216              		.loc 1 243 3 view .LVU52
 243:Core/Src/main.c **** 
 217              		.loc 1 243 28 is_stmt 0 view .LVU53
 218 0004 4422     		movs	r2, #68
 219 0006 0021     		movs	r1, #0
 220 0008 01A8     		add	r0, sp, #4
 221 000a FFF7FEFF 		bl	memset
 222              	.LVL5:
 247:Core/Src/main.c ****   PeriphClkInitStruct.SmpsClockSelection = RCC_SMPSCLKSOURCE_HSI;
 223              		.loc 1 247 3 is_stmt 1 view .LVU54
 247:Core/Src/main.c ****   PeriphClkInitStruct.SmpsClockSelection = RCC_SMPSCLKSOURCE_HSI;
 224              		.loc 1 247 44 is_stmt 0 view .LVU55
 225 000e 4FF40053 		mov	r3, #8192
 226 0012 0093     		str	r3, [sp]
 248:Core/Src/main.c ****   PeriphClkInitStruct.SmpsDivSelection = RCC_SMPSCLKDIV_RANGE0;
 227              		.loc 1 248 3 is_stmt 1 view .LVU56
 248:Core/Src/main.c ****   PeriphClkInitStruct.SmpsDivSelection = RCC_SMPSCLKDIV_RANGE0;
 228              		.loc 1 248 42 is_stmt 0 view .LVU57
 229 0014 0023     		movs	r3, #0
 230 0016 1293     		str	r3, [sp, #72]
 249:Core/Src/main.c **** 
 231              		.loc 1 249 3 is_stmt 1 view .LVU58
 249:Core/Src/main.c **** 
 232              		.loc 1 249 40 is_stmt 0 view .LVU59
 233 0018 1393     		str	r3, [sp, #76]
 251:Core/Src/main.c ****   {
 234              		.loc 1 251 3 is_stmt 1 view .LVU60
 251:Core/Src/main.c ****   {
 235              		.loc 1 251 7 is_stmt 0 view .LVU61
 236 001a 6846     		mov	r0, sp
 237 001c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 238              	.LVL6:
 251:Core/Src/main.c ****   {
 239              		.loc 1 251 6 view .LVU62
 240 0020 10B9     		cbnz	r0, .L14
 258:Core/Src/main.c **** 
 241              		.loc 1 258 1 view .LVU63
 242 0022 15B0     		add	sp, sp, #84
 243              	.LCFI6:
 244              		.cfi_remember_state
 245              		.cfi_def_cfa_offset 4
 246              		@ sp needed
 247 0024 5DF804FB 		ldr	pc, [sp], #4
 248              	.L14:
 249              	.LCFI7:
 250              		.cfi_restore_state
 253:Core/Src/main.c ****   }
 251              		.loc 1 253 5 is_stmt 1 view .LVU64
 252 0028 FFF7FEFF 		bl	Error_Handler
 253              	.LVL7:
 254              		.cfi_endproc
 255              	.LFE955:
 257              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 258              		.align	2
 259              	.LC0:
 260 0000 7472616E 		.ascii	"transmitter starts\012\015\000"
 260      736D6974 
ARM GAS  /tmp/ccuotLD6.s 			page 15


 260      74657220 
 260      73746172 
 260      74730A0D 
 261 0015 000000   		.align	2
 262              	.LC1:
 263 0018 70757368 		.ascii	"pushed button\012\015\000"
 263      65642062 
 263      7574746F 
 263      6E0A0D00 
 264              		.align	2
 265              	.LC2:
 266 0028 52656365 		.ascii	"Receiver starts!\012\015\000"
 266      69766572 
 266      20737461 
 266      72747321 
 266      0A0D00
 267 003b 00       		.align	2
 268              	.LC3:
 269 003c 72656365 		.ascii	"received message: %s\012\015\000"
 269      69766564 
 269      206D6573 
 269      73616765 
 269      3A202573 
 270              		.section	.text.main,"ax",%progbits
 271              		.align	1
 272              		.global	main
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	main:
 279              	.LFB953:
  86:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 280              		.loc 1 86 1 view -0
 281              		.cfi_startproc
 282              		@ Volatile: function does not return.
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285 0000 08B5     		push	{r3, lr}
 286              	.LCFI8:
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 3, -8
 289              		.cfi_offset 14, -4
  88:Core/Src/main.c ****   // txrx = 0;
 290              		.loc 1 88 4 view .LVU66
  88:Core/Src/main.c ****   // txrx = 0;
 291              		.loc 1 88 9 is_stmt 0 view .LVU67
 292 0002 2C4B     		ldr	r3, .L20
 293 0004 0122     		movs	r2, #1
 294 0006 1A60     		str	r2, [r3]
  95:Core/Src/main.c **** 
 295              		.loc 1 95 3 is_stmt 1 view .LVU68
 296 0008 FFF7FEFF 		bl	HAL_Init
 297              	.LVL8:
 102:Core/Src/main.c **** 
 298              		.loc 1 102 3 view .LVU69
 299 000c FFF7FEFF 		bl	SystemClock_Config
ARM GAS  /tmp/ccuotLD6.s 			page 16


 300              	.LVL9:
 105:Core/Src/main.c **** 
 301              		.loc 1 105 3 view .LVU70
 302 0010 FFF7FEFF 		bl	PeriphCommonClock_Config
 303              	.LVL10:
 112:Core/Src/main.c ****   MX_USART1_UART_Init();
 304              		.loc 1 112 3 view .LVU71
 305 0014 FFF7FEFF 		bl	MX_GPIO_Init
 306              	.LVL11:
 113:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 307              		.loc 1 113 3 view .LVU72
 308 0018 FFF7FEFF 		bl	MX_USART1_UART_Init
 309              	.LVL12:
 114:Core/Src/main.c ****   MX_TIM2_Init();
 310              		.loc 1 114 3 view .LVU73
 311 001c FFF7FEFF 		bl	MX_LPUART1_UART_Init
 312              	.LVL13:
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 313              		.loc 1 115 3 view .LVU74
 314 0020 FFF7FEFF 		bl	MX_TIM2_Init
 315              	.LVL14:
 316 0024 1EE0     		b	.L16
 317              	.L17:
 156:Core/Src/main.c ****         printf("Receiver starts!\n\r");
 318              		.loc 1 156 9 view .LVU75
 156:Core/Src/main.c ****         printf("Receiver starts!\n\r");
 319              		.loc 1 156 22 is_stmt 0 view .LVU76
 320 0026 244C     		ldr	r4, .L20+4
 321 0028 0025     		movs	r5, #0
 322 002a 2570     		strb	r5, [r4]
 157:Core/Src/main.c **** 
 323              		.loc 1 157 9 is_stmt 1 view .LVU77
 324 002c 2348     		ldr	r0, .L20+8
 325 002e FFF7FEFF 		bl	printf
 326              	.LVL15:
 160:Core/Src/main.c **** 
 327              		.loc 1 160 9 view .LVU78
 328 0032 4FF47A73 		mov	r3, #1000
 329 0036 1E22     		movs	r2, #30
 330 0038 2146     		mov	r1, r4
 331 003a 2148     		ldr	r0, .L20+12
 332 003c FFF7FEFF 		bl	HAL_UART_Receive
 333              	.LVL16:
 163:Core/Src/main.c ****           {
 334              		.loc 1 163 9 view .LVU79
 165:Core/Src/main.c ****             // led blue state becomes on to indicate that a message has just been received //
 335              		.loc 1 165 13 view .LVU80
 336 0040 2146     		mov	r1, r4
 337 0042 2048     		ldr	r0, .L20+16
 338 0044 FFF7FEFF 		bl	printf
 339              	.LVL17:
 167:Core/Src/main.c **** 
 340              		.loc 1 167 13 view .LVU81
 341 0048 0121     		movs	r1, #1
 342 004a 0220     		movs	r0, #2
 343 004c FFF7FEFF 		bl	set_led
 344              	.LVL18:
ARM GAS  /tmp/ccuotLD6.s 			page 17


 170:Core/Src/main.c ****             // turn off led blue //
 345              		.loc 1 170 13 view .LVU82
 346 0050 6420     		movs	r0, #100
 347 0052 FFF7FEFF 		bl	HAL_Delay
 348              	.LVL19:
 172:Core/Src/main.c ****             txrx = 1;
 349              		.loc 1 172 13 view .LVU83
 350 0056 2946     		mov	r1, r5
 351 0058 0220     		movs	r0, #2
 352 005a FFF7FEFF 		bl	set_led
 353              	.LVL20:
 173:Core/Src/main.c ****           }
 354              		.loc 1 173 13 view .LVU84
 173:Core/Src/main.c ****           }
 355              		.loc 1 173 18 is_stmt 0 view .LVU85
 356 005e 154B     		ldr	r3, .L20
 357 0060 0122     		movs	r2, #1
 358 0062 1A60     		str	r2, [r3]
 359              	.L16:
 124:Core/Src/main.c ****   {
 360              		.loc 1 124 3 is_stmt 1 view .LVU86
 134:Core/Src/main.c ****       {
 361              		.loc 1 134 5 view .LVU87
 134:Core/Src/main.c ****       {
 362              		.loc 1 134 9 is_stmt 0 view .LVU88
 363 0064 134B     		ldr	r3, .L20
 364 0066 1B68     		ldr	r3, [r3]
 134:Core/Src/main.c ****       {
 365              		.loc 1 134 8 view .LVU89
 366 0068 002B     		cmp	r3, #0
 367 006a DCD0     		beq	.L17
 136:Core/Src/main.c ****         // read the state of button 1 //
 368              		.loc 1 136 9 is_stmt 1 view .LVU90
 369 006c 1648     		ldr	r0, .L20+20
 370 006e FFF7FEFF 		bl	printf
 371              	.LVL21:
 138:Core/Src/main.c ****            {   
 372              		.loc 1 138 10 view .LVU91
 138:Core/Src/main.c ****            {   
 373              		.loc 1 138 13 is_stmt 0 view .LVU92
 374 0072 1021     		movs	r1, #16
 375 0074 1548     		ldr	r0, .L20+24
 376 0076 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 377              	.LVL22:
 138:Core/Src/main.c ****            {   
 378              		.loc 1 138 12 view .LVU93
 379 007a 0128     		cmp	r0, #1
 380 007c F2D1     		bne	.L16
 140:Core/Src/main.c **** 
 381              		.loc 1 140 15 is_stmt 1 view .LVU94
 382 007e 1448     		ldr	r0, .L20+28
 383 0080 FFF7FEFF 		bl	printf
 384              	.LVL23:
 143:Core/Src/main.c **** 
 385              		.loc 1 143 15 view .LVU95
 143:Core/Src/main.c **** 
 386              		.loc 1 143 55 is_stmt 0 view .LVU96
ARM GAS  /tmp/ccuotLD6.s 			page 18


 387 0084 134C     		ldr	r4, .L20+32
 388 0086 2046     		mov	r0, r4
 389 0088 FFF7FEFF 		bl	strlen
 390              	.LVL24:
 143:Core/Src/main.c **** 
 391              		.loc 1 143 15 view .LVU97
 392 008c 4FF6FF73 		movw	r3, #65535
 393 0090 82B2     		uxth	r2, r0
 394 0092 2146     		mov	r1, r4
 395 0094 0A48     		ldr	r0, .L20+12
 396 0096 FFF7FEFF 		bl	HAL_UART_Transmit
 397              	.LVL25:
 145:Core/Src/main.c ****               
 398              		.loc 1 145 15 is_stmt 1 view .LVU98
 399 009a 4FF4FA70 		mov	r0, #500
 400 009e FFF7FEFF 		bl	HAL_Delay
 401              	.LVL26:
 148:Core/Src/main.c ****               txrx = 0;
 402              		.loc 1 148 15 view .LVU99
 403 00a2 0021     		movs	r1, #0
 404 00a4 0220     		movs	r0, #2
 405 00a6 FFF7FEFF 		bl	set_led
 406              	.LVL27:
 149:Core/Src/main.c ****           }
 407              		.loc 1 149 15 view .LVU100
 149:Core/Src/main.c ****           }
 408              		.loc 1 149 20 is_stmt 0 view .LVU101
 409 00aa 024B     		ldr	r3, .L20
 410 00ac 0022     		movs	r2, #0
 411 00ae 1A60     		str	r2, [r3]
 412 00b0 D8E7     		b	.L16
 413              	.L21:
 414 00b2 00BF     		.align	2
 415              	.L20:
 416 00b4 00000000 		.word	txrx
 417 00b8 00000000 		.word	.LANCHOR1
 418 00bc 28000000 		.word	.LC2
 419 00c0 00000000 		.word	hlpuart1
 420 00c4 3C000000 		.word	.LC3
 421 00c8 00000000 		.word	.LC0
 422 00cc 00080048 		.word	1207961600
 423 00d0 18000000 		.word	.LC1
 424 00d4 00000000 		.word	.LANCHOR0
 425              		.cfi_endproc
 426              	.LFE953:
 428              		.comm	txrx,4,4
 429              		.global	RxMessage
 430              		.global	TxMessage
 431              		.section	.bss.RxMessage,"aw",%nobits
 432              		.align	2
 433              		.set	.LANCHOR1,. + 0
 436              	RxMessage:
 437 0000 00000000 		.space	30
 437      00000000 
 437      00000000 
 437      00000000 
 437      00000000 
ARM GAS  /tmp/ccuotLD6.s 			page 19


 438              		.section	.data.TxMessage,"aw"
 439              		.align	2
 440              		.set	.LANCHOR0,. + 0
 443              	TxMessage:
 444 0000 0A0D2070 		.ascii	"\012\015 ping\012\015\000"
 444      696E670A 
 444      0D00
 445              		.text
 446              	.Letext0:
 447              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 448              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 449              		.file 5 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/system_stm32wbxx.h"
 450              		.file 6 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/stm32wb55xx.h"
 451              		.file 7 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_def.h"
 452              		.file 8 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_dma.h"
 453              		.file 9 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_flash.h"
 454              		.file 10 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_gpio.h"
 455              		.file 11 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_rcc.h"
 456              		.file 12 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_rcc_ex.h"
 457              		.file 13 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_tim.h"
 458              		.file 14 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_uart.h"
 459              		.file 15 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal.h"
 460              		.file 16 "Core/Inc/usart.h"
 461              		.file 17 "Core/Inc/tim.h"
 462              		.file 18 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 463              		.file 19 "/usr/include/newlib/sys/_types.h"
 464              		.file 20 "/usr/include/newlib/sys/reent.h"
 465              		.file 21 "/usr/include/newlib/sys/lock.h"
 466              		.file 22 "../../lib/led/led.h"
 467              		.file 23 "/usr/include/newlib/stdlib.h"
 468              		.file 24 "Core/Inc/gpio.h"
 469              		.file 25 "/usr/include/newlib/stdio.h"
 470              		.file 26 "/usr/include/newlib/string.h"
 471              		.file 27 "<built-in>"
ARM GAS  /tmp/ccuotLD6.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccuotLD6.s:18     .text.Error_Handler:0000000000000000 $t
     /tmp/ccuotLD6.s:26     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccuotLD6.s:59     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccuotLD6.s:66     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccuotLD6.s:191    .text.SystemClock_Config:0000000000000080 $d
     /tmp/ccuotLD6.s:196    .text.PeriphCommonClock_Config:0000000000000000 $t
     /tmp/ccuotLD6.s:203    .text.PeriphCommonClock_Config:0000000000000000 PeriphCommonClock_Config
     /tmp/ccuotLD6.s:258    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccuotLD6.s:271    .text.main:0000000000000000 $t
     /tmp/ccuotLD6.s:278    .text.main:0000000000000000 main
     /tmp/ccuotLD6.s:416    .text.main:00000000000000b4 $d
                            *COM*:0000000000000004 txrx
     /tmp/ccuotLD6.s:436    .bss.RxMessage:0000000000000000 RxMessage
     /tmp/ccuotLD6.s:443    .data.TxMessage:0000000000000000 TxMessage
     /tmp/ccuotLD6.s:432    .bss.RxMessage:0000000000000000 $d
     /tmp/ccuotLD6.s:439    .data.TxMessage:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
MX_LPUART1_UART_Init
MX_TIM2_Init
printf
HAL_UART_Receive
set_led
HAL_Delay
HAL_GPIO_ReadPin
strlen
HAL_UART_Transmit
hlpuart1
