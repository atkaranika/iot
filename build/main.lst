ARM GAS  /tmp/ccF4KpLF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Error_Handler:
  27              	.LFB956:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usart.h"
  22:Core/Src/main.c **** #include "tim.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** #include <string.h>
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.c **** #include "led.h"
ARM GAS  /tmp/ccF4KpLF.s 			page 2


  31:Core/Src/main.c **** #include "storage.h"
  32:Core/Src/main.c **** #include "sample-lib.h"
  33:Core/Src/main.c **** #include <stdlib.h>
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END Includes */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PD */
  44:Core/Src/main.c **** #define DS18B20_PORT GPIOA
  45:Core/Src/main.c **** #define DS18B20_PIN GPIO_PIN_1
  46:Core/Src/main.c **** #define MAX_SIZE_RECEIVE 30
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** // p1s4 defines //
  49:Core/Src/main.c **** #define MAX_INPUT_COMMAND 100
  50:Core/Src/main.c **** #define MAX_INPUT_LED 10
  51:Core/Src/main.c **** #define MAX_INPUT_STATUS 2
  52:Core/Src/main.c **** /* USER CODE END PD */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN PM */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PM */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE BEGIN PV */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** // p1s2 variables //
  64:Core/Src/main.c ****   
  65:Core/Src/main.c **** // transmiter messages //
  66:Core/Src/main.c **** uint8_t TxMessage[] = "\n\r ping\n\r";
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** // receiver messages //
  69:Core/Src/main.c **** uint8_t RxMessage[MAX_SIZE_RECEIVE] = {'\0'};
  70:Core/Src/main.c **** int txrx ;
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** // p1s4 variables //
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** uint8_t uartreadmessage[100]; //  uart receive(config.c) the whole message //
  75:Core/Src/main.c **** char command[MAX_INPUT_COMMAND] = {'\0'}; // uart receive(config.c) user command //
  76:Core/Src/main.c **** char led[MAX_INPUT_LED]; // uart receive(config.c) led option //
  77:Core/Src/main.c **** char status[MAX_INPUT_STATUS]; // uart receive(config.c) selected status of led //
  78:Core/Src/main.c **** uint8_t uartresponseled[30] = "operation done!\n"; // after calling of command send a message back 
  79:Core/Src/main.c **** int i; // uartreadmessage index //
  80:Core/Src/main.c **** int j;
  81:Core/Src/main.c **** /* USER CODE END PV */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  84:Core/Src/main.c **** void SystemClock_Config(void);
  85:Core/Src/main.c **** void PeriphCommonClock_Config(void);
  86:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  87:Core/Src/main.c **** 
ARM GAS  /tmp/ccF4KpLF.s 			page 3


  88:Core/Src/main.c **** /* USER CODE END PFP */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  91:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** /* USER CODE END 0 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /**
  96:Core/Src/main.c ****   * @brief  The application entry point.
  97:Core/Src/main.c ****   * @retval int
  98:Core/Src/main.c ****   */
  99:Core/Src/main.c **** int main(void)
 100:Core/Src/main.c **** {
 101:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 102:Core/Src/main.c ****    txrx = 1; // transmitter  1, receiver 0//
 103:Core/Src/main.c ****   // txrx = 0;
 104:Core/Src/main.c ****   /* USER CODE END 1 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 109:Core/Src/main.c ****   HAL_Init();
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END Init */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Configure the system clock */
 116:Core/Src/main.c ****   SystemClock_Config();
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** /* Configure the peripherals common clocks */
 119:Core/Src/main.c ****   PeriphCommonClock_Config();
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE END SysInit */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* Initialize all configured peripherals */
 126:Core/Src/main.c ****   MX_GPIO_Init();
 127:Core/Src/main.c ****   MX_USART1_UART_Init();
 128:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 129:Core/Src/main.c ****   MX_TIM2_Init();
 130:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE END 2 */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* Infinite loop */
 135:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 136:Core/Src/main.c ****   /********************** DHT11 *********************/
 137:Core/Src/main.c ****   
 138:Core/Src/main.c ****   while (1)
 139:Core/Src/main.c ****   {
 140:Core/Src/main.c ****    // ============================= P1S4 ====================== //
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****     // printf("hello world\n\r");
 143:Core/Src/main.c ****     // strcpy(uartreadmessage, "hello_world");
 144:Core/Src/main.c ****     // HAL_UART_Transmit(&huart1, uartreadmessage, sizeof(uartreadmessage), 100);
ARM GAS  /tmp/ccF4KpLF.s 			page 4


 145:Core/Src/main.c ****     for (i = 0 ; i < 100 ; i++)
 146:Core/Src/main.c ****       {
 147:Core/Src/main.c ****         uartreadmessage[i] = '\0';
 148:Core/Src/main.c ****       }
 149:Core/Src/main.c ****     
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****     // uartreadmessage[0] = '\0';
 152:Core/Src/main.c ****     // wait for message from config //
 153:Core/Src/main.c ****     HAL_UART_Receive(&huart1, uartreadmessage, sizeof(uartreadmessage), 1000);
 154:Core/Src/main.c ****     i = 0;
 155:Core/Src/main.c ****     
 156:Core/Src/main.c ****     printf("receive command: %s\n\r", uartreadmessage); 
 157:Core/Src/main.c ****     // if nothing received, repeat the receive proceedure //
 158:Core/Src/main.c ****     if (uartreadmessage[0] == '\0')
 159:Core/Src/main.c ****       {
 160:Core/Src/main.c ****         continue;
 161:Core/Src/main.c ****       }
 162:Core/Src/main.c ****     i = 0;
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****     // delimiter //
 165:Core/Src/main.c ****     // printf("strlen uartreadmessage %d\n\r", strlen((char* )uartreadmessage));
 166:Core/Src/main.c ****     for (i = 0 ; i < strlen(uartreadmessage) ; i++)
 167:Core/Src/main.c ****       {
 168:Core/Src/main.c ****         if (uartreadmessage[i] != '*')
 169:Core/Src/main.c ****           {
 170:Core/Src/main.c ****             command[i] = uartreadmessage[i];
 171:Core/Src/main.c ****           }
 172:Core/Src/main.c ****         else break ;
 173:Core/Src/main.c ****       }
 174:Core/Src/main.c ****     // printf("command = %s\n\r", command);
 175:Core/Src/main.c ****     
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****     if (strcmp(command, "set_led\n") == 0)
 178:Core/Src/main.c ****       { 
 179:Core/Src/main.c ****         printf("set_led command\n\r");
 180:Core/Src/main.c ****         // message format command*led*status* //
 181:Core/Src/main.c ****         // delimiter //
 182:Core/Src/main.c ****        
 183:Core/Src/main.c ****         // delimiter //
 184:Core/Src/main.c ****         // printf("led %s i  %d\n\r", led, i);
 185:Core/Src/main.c ****         j = 0;
 186:Core/Src/main.c ****         for (i = i + 1 ; i < strlen(uartreadmessage) ; i++)
 187:Core/Src/main.c ****           {
 188:Core/Src/main.c ****             if (uartreadmessage[i] != '*')
 189:Core/Src/main.c ****               {
 190:Core/Src/main.c ****                 led[j] = uartreadmessage[i];
 191:Core/Src/main.c ****                 j++;
 192:Core/Src/main.c ****               }
 193:Core/Src/main.c ****             else break ;
 194:Core/Src/main.c ****           }
 195:Core/Src/main.c ****         j = 0;
 196:Core/Src/main.c ****         printf("led %s", led);
 197:Core/Src/main.c ****         for (i = i + 1 ; i < strlen(uartreadmessage) ; i++)
 198:Core/Src/main.c ****           {
 199:Core/Src/main.c ****             if (uartreadmessage[i] != '*')
 200:Core/Src/main.c ****               {
 201:Core/Src/main.c ****                 status[j] = uartreadmessage[i];
ARM GAS  /tmp/ccF4KpLF.s 			page 5


 202:Core/Src/main.c ****                 j++;
 203:Core/Src/main.c ****               }
 204:Core/Src/main.c ****             else break ;
 205:Core/Src/main.c ****           }
 206:Core/Src/main.c ****          // call the function //
 207:Core/Src/main.c ****         printf("status %s", status);
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****          if (strcmp(led, "red\n") == 0)
 210:Core/Src/main.c ****           {
 211:Core/Src/main.c ****             printf("eftasa red\n");
 212:Core/Src/main.c ****             if (strcmp(status, "0") == 0)
 213:Core/Src/main.c ****               {
 214:Core/Src/main.c ****                 set_led(LED_RED, LED_OFF); 
 215:Core/Src/main.c ****               }
 216:Core/Src/main.c ****             else 
 217:Core/Src/main.c ****               {
 218:Core/Src/main.c ****                 set_led(LED_RED, LED_ON); 
 219:Core/Src/main.c ****               }
 220:Core/Src/main.c ****           }
 221:Core/Src/main.c ****         else if (strcmp(led, "blue\n") == 0)
 222:Core/Src/main.c ****           {
 223:Core/Src/main.c ****             printf("eftasa blue\n");
 224:Core/Src/main.c ****             if (strcmp(status, "0") == 0)
 225:Core/Src/main.c ****               {
 226:Core/Src/main.c ****                 set_led(LED_BLUE, LED_OFF); 
 227:Core/Src/main.c ****               }
 228:Core/Src/main.c ****             else 
 229:Core/Src/main.c ****               {
 230:Core/Src/main.c ****                 set_led(LED_BLUE, LED_ON); 
 231:Core/Src/main.c ****               }
 232:Core/Src/main.c ****           }
 233:Core/Src/main.c ****         else if (strcmp(led, "green\n") == 0)
 234:Core/Src/main.c ****           {
 235:Core/Src/main.c ****             printf("eftasa green\n");
 236:Core/Src/main.c ****             if (strcmp(status, "0") == 0)
 237:Core/Src/main.c ****               {
 238:Core/Src/main.c ****                 set_led(LED_GREEN, LED_OFF); 
 239:Core/Src/main.c ****               }
 240:Core/Src/main.c ****             else 
 241:Core/Src/main.c ****               {
 242:Core/Src/main.c ****                 set_led(LED_GREEN, LED_ON); 
 243:Core/Src/main.c ****               }
 244:Core/Src/main.c ****           }
 245:Core/Src/main.c ****       }
 246:Core/Src/main.c ****     //     // send response to config to inform that command is submitted successfully //
 247:Core/Src/main.c **** 	      //  HAL_UART_Transmit(&huart1, (uint8_t *)uartresponseled, sizeof(uartresponseled), 0xFFFF);
 248:Core/Src/main.c ****     //   }
 249:Core/Src/main.c ****        /*
 250:Core/Src/main.c ****       if (strcmp(command, "storage_write"))
 251:Core/Src/main.c ****           { 
 252:Core/Src/main.c ****             // message format command*address*data* //
 253:Core/Src/main.c ****             // delimiter //
 254:Core/Src/main.c ****             while(uartreadmessage[i] != '*')
 255:Core/Src/main.c ****               {
 256:Core/Src/main.c ****                 idx[i] = uartreadmessage[i];
 257:Core/Src/main.c ****                 i++;
 258:Core/Src/main.c ****               }
ARM GAS  /tmp/ccF4KpLF.s 			page 6


 259:Core/Src/main.c ****             i++; 
 260:Core/Src/main.c ****             // delimiter //
 261:Core/Src/main.c ****             while(uartreadmessage[i] != '*')
 262:Core/Src/main.c ****               {
 263:Core/Src/main.c ****                 data[i] = uartreadmessage[i];
 264:Core/Src/main.c ****                 i++;
 265:Core/Src/main.c ****               }
 266:Core/Src/main.c ****             // call the function //
 267:Core/Src/main.c ****             // idx : startaddress string  //
 268:Core/Src/main.c ****             // 16 : hexadecimal           //
 269:Core/Src/main.c ****             storage_write(strtol(idx, NULL, 16), (uint8_t*) data, strlen(data);
 270:Core/Src/main.c ****             // send response to config to inform that command is submitted successfully //
 271:Core/Src/main.c ****             HAL_UART_Transmit(&huart1, (uint8_t *)uartresponsestorage, sizeof(uartresponseled), 0xF
 272:Core/Src/main.c ****           }
 273:Core/Src/main.c ****         if (strcmp(command, "storage_read"))
 274:Core/Src/main.c ****           {
 275:Core/Src/main.c ****             // message format command*address*len* //
 276:Core/Src/main.c ****             // delimiter //
 277:Core/Src/main.c ****             while(uartreadmessage[i] != '*')
 278:Core/Src/main.c ****               {
 279:Core/Src/main.c ****                 idx[i] = uartreadmessage[i];
 280:Core/Src/main.c ****                 i++;
 281:Core/Src/main.c ****               }
 282:Core/Src/main.c ****             i++; 
 283:Core/Src/main.c ****             // delimiter //
 284:Core/Src/main.c ****             while(uartreadmessage[i] != '*')
 285:Core/Src/main.c ****               {
 286:Core/Src/main.c ****                 len[i] = uartreadmessage[i];
 287:Core/Src/main.c ****                 i++;
 288:Core/Src/main.c ****               }
 289:Core/Src/main.c ****             // call the function //
 290:Core/Src/main.c ****             // idx : startaddress string  //
 291:Core/Src/main.c ****             storage_read(strtol(idx, NULL, 16), (uint8_t*) data, (uint32_t) atoi(len)); 
 292:Core/Src/main.c ****             // send response to config to inform that command is submitted successfully //
 293:Core/Src/main.c ****             HAL_UART_Transmit(&huart1, (uint8_t *)uartresponsestorage, sizeof(uartresponseled), 0xF
 294:Core/Src/main.c ****           }
 295:Core/Src/main.c ****     */
 296:Core/Src/main.c ****     // ============================= P1S4 ====================== //
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****     // ============================= P1S1 ====================== //
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****     //hello_world();
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****     // ============================= P1S1 ====================== //
 303:Core/Src/main.c **** 
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** 	  
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****     /* USER CODE END WHILE */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 310:Core/Src/main.c ****   }
 311:Core/Src/main.c ****   /* USER CODE END 3 */
 312:Core/Src/main.c **** }
 313:Core/Src/main.c **** 
 314:Core/Src/main.c **** /**
 315:Core/Src/main.c ****   * @brief System Clock Configuration
ARM GAS  /tmp/ccF4KpLF.s 			page 7


 316:Core/Src/main.c ****   * @retval None
 317:Core/Src/main.c ****   */
 318:Core/Src/main.c **** void SystemClock_Config(void)
 319:Core/Src/main.c **** {
 320:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 321:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 324:Core/Src/main.c ****   */
 325:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 326:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 327:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 328:Core/Src/main.c ****   */
 329:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 330:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 331:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 332:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 333:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 334:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 335:Core/Src/main.c ****   {
 336:Core/Src/main.c ****     Error_Handler();
 337:Core/Src/main.c ****   }
 338:Core/Src/main.c ****   /** Configure the SYSCLKSource, HCLK, PCLK1 and PCLK2 clocks dividers
 339:Core/Src/main.c ****   */
 340:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK4|RCC_CLOCKTYPE_HCLK2
 341:Core/Src/main.c ****                               |RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 342:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 343:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 344:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 345:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 346:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 347:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK2Divider = RCC_SYSCLK_DIV1;
 348:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK4Divider = RCC_SYSCLK_DIV1;
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 351:Core/Src/main.c ****   {
 352:Core/Src/main.c ****     Error_Handler();
 353:Core/Src/main.c ****   }
 354:Core/Src/main.c **** }
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** /**
 357:Core/Src/main.c ****   * @brief Peripherals Common Clock Configuration
 358:Core/Src/main.c ****   * @retval None
 359:Core/Src/main.c ****   */
 360:Core/Src/main.c **** void PeriphCommonClock_Config(void)
 361:Core/Src/main.c **** {
 362:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /** Initializes the peripherals clock
 365:Core/Src/main.c ****   */
 366:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SMPS;
 367:Core/Src/main.c ****   PeriphClkInitStruct.SmpsClockSelection = RCC_SMPSCLKSOURCE_HSI;
 368:Core/Src/main.c ****   PeriphClkInitStruct.SmpsDivSelection = RCC_SMPSCLKDIV_RANGE0;
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 371:Core/Src/main.c ****   {
 372:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccF4KpLF.s 			page 8


 373:Core/Src/main.c ****   }
 374:Core/Src/main.c ****   /* USER CODE BEGIN Smps */
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /* USER CODE END Smps */
 377:Core/Src/main.c **** }
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** /* USER CODE END 4 */
 382:Core/Src/main.c **** 
 383:Core/Src/main.c **** /**
 384:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 385:Core/Src/main.c ****   * @retval None
 386:Core/Src/main.c ****   */
 387:Core/Src/main.c **** void Error_Handler(void)
 388:Core/Src/main.c **** {
  29              		.loc 1 388 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 389:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 390:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 391:Core/Src/main.c ****   __disable_irq();
  35              		.loc 1 391 3 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  /tmp/ccF4KpLF.s 			page 9


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccF4KpLF.s 			page 10


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
ARM GAS  /tmp/ccF4KpLF.s 			page 11


 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccF4KpLF.s 			page 12


 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 207 27 view .LVU2
  40              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 209 3 view .LVU3
  42              		.syntax unified
  43              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 392:Core/Src/main.c ****   while (1)
  51              		.loc 1 392 3 discriminator 1 view .LVU4
 393:Core/Src/main.c ****   {
 394:Core/Src/main.c ****   }
  52              		.loc 1 394 3 discriminator 1 view .LVU5
 392:Core/Src/main.c ****   while (1)
  53              		.loc 1 392 9 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE956:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	SystemClock_Config:
  67              	.LFB954:
 319:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  68              		.loc 1 319 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 104
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 00B5     		push	{lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 14, -4
  76 0002 9BB0     		sub	sp, sp, #108
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 112
 320:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 320 3 view .LVU8
 320:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  80              		.loc 1 320 22 is_stmt 0 view .LVU9
ARM GAS  /tmp/ccF4KpLF.s 			page 13


  81 0004 4822     		movs	r2, #72
  82 0006 0021     		movs	r1, #0
  83 0008 08A8     		add	r0, sp, #32
  84 000a FFF7FEFF 		bl	memset
  85              	.LVL0:
 321:Core/Src/main.c **** 
  86              		.loc 1 321 3 is_stmt 1 view .LVU10
 321:Core/Src/main.c **** 
  87              		.loc 1 321 22 is_stmt 0 view .LVU11
  88 000e 0023     		movs	r3, #0
  89 0010 0193     		str	r3, [sp, #4]
  90 0012 0293     		str	r3, [sp, #8]
  91 0014 0393     		str	r3, [sp, #12]
  92 0016 0493     		str	r3, [sp, #16]
  93 0018 0593     		str	r3, [sp, #20]
  94 001a 0693     		str	r3, [sp, #24]
  95 001c 0793     		str	r3, [sp, #28]
 325:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
  96              		.loc 1 325 3 is_stmt 1 view .LVU12
  97              	.LBB6:
 325:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
  98              		.loc 1 325 3 view .LVU13
 325:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
  99              		.loc 1 325 3 view .LVU14
 100 001e 1849     		ldr	r1, .L9
 101 0020 0A68     		ldr	r2, [r1]
 102 0022 22F4C062 		bic	r2, r2, #1536
 103 0026 42F40072 		orr	r2, r2, #512
 104 002a 0A60     		str	r2, [r1]
 325:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 105              		.loc 1 325 3 view .LVU15
 106 002c 0A68     		ldr	r2, [r1]
 107 002e 02F4C062 		and	r2, r2, #1536
 108 0032 0092     		str	r2, [sp]
 325:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 109              		.loc 1 325 3 view .LVU16
 110 0034 009A     		ldr	r2, [sp]
 111              	.LBE6:
 325:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 112              		.loc 1 325 3 view .LVU17
 329:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 113              		.loc 1 329 3 view .LVU18
 329:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 114              		.loc 1 329 36 is_stmt 0 view .LVU19
 115 0036 0322     		movs	r2, #3
 116 0038 0892     		str	r2, [sp, #32]
 330:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 117              		.loc 1 330 3 is_stmt 1 view .LVU20
 330:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 118              		.loc 1 330 30 is_stmt 0 view .LVU21
 119 003a 4FF48032 		mov	r2, #65536
 120 003e 0992     		str	r2, [sp, #36]
 331:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 121              		.loc 1 331 3 is_stmt 1 view .LVU22
 331:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 122              		.loc 1 331 30 is_stmt 0 view .LVU23
 123 0040 4FF48072 		mov	r2, #256
ARM GAS  /tmp/ccF4KpLF.s 			page 14


 124 0044 0B92     		str	r2, [sp, #44]
 332:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 125              		.loc 1 332 3 is_stmt 1 view .LVU24
 332:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 126              		.loc 1 332 41 is_stmt 0 view .LVU25
 127 0046 4022     		movs	r2, #64
 128 0048 0C92     		str	r2, [sp, #48]
 333:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 129              		.loc 1 333 3 is_stmt 1 view .LVU26
 333:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 130              		.loc 1 333 34 is_stmt 0 view .LVU27
 131 004a 1393     		str	r3, [sp, #76]
 334:Core/Src/main.c ****   {
 132              		.loc 1 334 3 is_stmt 1 view .LVU28
 334:Core/Src/main.c ****   {
 133              		.loc 1 334 7 is_stmt 0 view .LVU29
 134 004c 08A8     		add	r0, sp, #32
 135 004e FFF7FEFF 		bl	HAL_RCC_OscConfig
 136              	.LVL1:
 334:Core/Src/main.c ****   {
 137              		.loc 1 334 6 view .LVU30
 138 0052 88B9     		cbnz	r0, .L7
 340:Core/Src/main.c ****                               |RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 139              		.loc 1 340 3 is_stmt 1 view .LVU31
 340:Core/Src/main.c ****                               |RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 140              		.loc 1 340 31 is_stmt 0 view .LVU32
 141 0054 6F23     		movs	r3, #111
 142 0056 0193     		str	r3, [sp, #4]
 343:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 143              		.loc 1 343 3 is_stmt 1 view .LVU33
 343:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 144              		.loc 1 343 34 is_stmt 0 view .LVU34
 145 0058 0223     		movs	r3, #2
 146 005a 0293     		str	r3, [sp, #8]
 344:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 147              		.loc 1 344 3 is_stmt 1 view .LVU35
 344:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 148              		.loc 1 344 35 is_stmt 0 view .LVU36
 149 005c 0023     		movs	r3, #0
 150 005e 0393     		str	r3, [sp, #12]
 345:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 151              		.loc 1 345 3 is_stmt 1 view .LVU37
 345:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 152              		.loc 1 345 36 is_stmt 0 view .LVU38
 153 0060 0493     		str	r3, [sp, #16]
 346:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK2Divider = RCC_SYSCLK_DIV1;
 154              		.loc 1 346 3 is_stmt 1 view .LVU39
 346:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK2Divider = RCC_SYSCLK_DIV1;
 155              		.loc 1 346 36 is_stmt 0 view .LVU40
 156 0062 0593     		str	r3, [sp, #20]
 347:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK4Divider = RCC_SYSCLK_DIV1;
 157              		.loc 1 347 3 is_stmt 1 view .LVU41
 347:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK4Divider = RCC_SYSCLK_DIV1;
 158              		.loc 1 347 36 is_stmt 0 view .LVU42
 159 0064 0693     		str	r3, [sp, #24]
 348:Core/Src/main.c **** 
 160              		.loc 1 348 3 is_stmt 1 view .LVU43
ARM GAS  /tmp/ccF4KpLF.s 			page 15


 348:Core/Src/main.c **** 
 161              		.loc 1 348 36 is_stmt 0 view .LVU44
 162 0066 0793     		str	r3, [sp, #28]
 350:Core/Src/main.c ****   {
 163              		.loc 1 350 3 is_stmt 1 view .LVU45
 350:Core/Src/main.c ****   {
 164              		.loc 1 350 7 is_stmt 0 view .LVU46
 165 0068 0121     		movs	r1, #1
 166 006a 01A8     		add	r0, sp, #4
 167 006c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 168              	.LVL2:
 350:Core/Src/main.c ****   {
 169              		.loc 1 350 6 view .LVU47
 170 0070 20B9     		cbnz	r0, .L8
 354:Core/Src/main.c **** 
 171              		.loc 1 354 1 view .LVU48
 172 0072 1BB0     		add	sp, sp, #108
 173              	.LCFI2:
 174              		.cfi_remember_state
 175              		.cfi_def_cfa_offset 4
 176              		@ sp needed
 177 0074 5DF804FB 		ldr	pc, [sp], #4
 178              	.L7:
 179              	.LCFI3:
 180              		.cfi_restore_state
 336:Core/Src/main.c ****   }
 181              		.loc 1 336 5 is_stmt 1 view .LVU49
 182 0078 FFF7FEFF 		bl	Error_Handler
 183              	.LVL3:
 184              	.L8:
 352:Core/Src/main.c ****   }
 185              		.loc 1 352 5 view .LVU50
 186 007c FFF7FEFF 		bl	Error_Handler
 187              	.LVL4:
 188              	.L10:
 189              		.align	2
 190              	.L9:
 191 0080 00040058 		.word	1476396032
 192              		.cfi_endproc
 193              	.LFE954:
 195              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 196              		.align	1
 197              		.global	PeriphCommonClock_Config
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	PeriphCommonClock_Config:
 204              	.LFB955:
 361:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 205              		.loc 1 361 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 80
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 00B5     		push	{lr}
 210              	.LCFI4:
 211              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccF4KpLF.s 			page 16


 212              		.cfi_offset 14, -4
 213 0002 95B0     		sub	sp, sp, #84
 214              	.LCFI5:
 215              		.cfi_def_cfa_offset 88
 362:Core/Src/main.c **** 
 216              		.loc 1 362 3 view .LVU52
 362:Core/Src/main.c **** 
 217              		.loc 1 362 28 is_stmt 0 view .LVU53
 218 0004 4422     		movs	r2, #68
 219 0006 0021     		movs	r1, #0
 220 0008 01A8     		add	r0, sp, #4
 221 000a FFF7FEFF 		bl	memset
 222              	.LVL5:
 366:Core/Src/main.c ****   PeriphClkInitStruct.SmpsClockSelection = RCC_SMPSCLKSOURCE_HSI;
 223              		.loc 1 366 3 is_stmt 1 view .LVU54
 366:Core/Src/main.c ****   PeriphClkInitStruct.SmpsClockSelection = RCC_SMPSCLKSOURCE_HSI;
 224              		.loc 1 366 44 is_stmt 0 view .LVU55
 225 000e 4FF40053 		mov	r3, #8192
 226 0012 0093     		str	r3, [sp]
 367:Core/Src/main.c ****   PeriphClkInitStruct.SmpsDivSelection = RCC_SMPSCLKDIV_RANGE0;
 227              		.loc 1 367 3 is_stmt 1 view .LVU56
 367:Core/Src/main.c ****   PeriphClkInitStruct.SmpsDivSelection = RCC_SMPSCLKDIV_RANGE0;
 228              		.loc 1 367 42 is_stmt 0 view .LVU57
 229 0014 0023     		movs	r3, #0
 230 0016 1293     		str	r3, [sp, #72]
 368:Core/Src/main.c **** 
 231              		.loc 1 368 3 is_stmt 1 view .LVU58
 368:Core/Src/main.c **** 
 232              		.loc 1 368 40 is_stmt 0 view .LVU59
 233 0018 1393     		str	r3, [sp, #76]
 370:Core/Src/main.c ****   {
 234              		.loc 1 370 3 is_stmt 1 view .LVU60
 370:Core/Src/main.c ****   {
 235              		.loc 1 370 7 is_stmt 0 view .LVU61
 236 001a 6846     		mov	r0, sp
 237 001c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 238              	.LVL6:
 370:Core/Src/main.c ****   {
 239              		.loc 1 370 6 view .LVU62
 240 0020 10B9     		cbnz	r0, .L14
 377:Core/Src/main.c **** 
 241              		.loc 1 377 1 view .LVU63
 242 0022 15B0     		add	sp, sp, #84
 243              	.LCFI6:
 244              		.cfi_remember_state
 245              		.cfi_def_cfa_offset 4
 246              		@ sp needed
 247 0024 5DF804FB 		ldr	pc, [sp], #4
 248              	.L14:
 249              	.LCFI7:
 250              		.cfi_restore_state
 372:Core/Src/main.c ****   }
 251              		.loc 1 372 5 is_stmt 1 view .LVU64
 252 0028 FFF7FEFF 		bl	Error_Handler
 253              	.LVL7:
 254              		.cfi_endproc
 255              	.LFE955:
ARM GAS  /tmp/ccF4KpLF.s 			page 17


 257              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 258              		.align	2
 259              	.LC0:
 260 0000 72656365 		.ascii	"receive command: %s\012\015\000"
 260      69766520 
 260      636F6D6D 
 260      616E643A 
 260      2025730A 
 261 0016 0000     		.align	2
 262              	.LC1:
 263 0018 7365745F 		.ascii	"set_led\012\000"
 263      6C65640A 
 263      00
 264 0021 000000   		.align	2
 265              	.LC2:
 266 0024 7365745F 		.ascii	"set_led command\012\015\000"
 266      6C656420 
 266      636F6D6D 
 266      616E640A 
 266      0D00
 267 0036 0000     		.align	2
 268              	.LC3:
 269 0038 6C656420 		.ascii	"led %s\000"
 269      257300
 270 003f 00       		.align	2
 271              	.LC4:
 272 0040 73746174 		.ascii	"status %s\000"
 272      75732025 
 272      7300
 273 004a 0000     		.align	2
 274              	.LC5:
 275 004c 7265640A 		.ascii	"red\012\000"
 275      00
 276 0051 000000   		.align	2
 277              	.LC6:
 278 0054 65667461 		.ascii	"eftasa red\000"
 278      73612072 
 278      656400
 279 005f 00       		.align	2
 280              	.LC7:
 281 0060 3000     		.ascii	"0\000"
 282 0062 0000     		.align	2
 283              	.LC8:
 284 0064 626C7565 		.ascii	"blue\012\000"
 284      0A00
 285 006a 0000     		.align	2
 286              	.LC9:
 287 006c 65667461 		.ascii	"eftasa blue\000"
 287      73612062 
 287      6C756500 
 288              		.align	2
 289              	.LC10:
 290 0078 67726565 		.ascii	"green\012\000"
 290      6E0A00
 291 007f 00       		.align	2
 292              	.LC11:
 293 0080 65667461 		.ascii	"eftasa green\000"
ARM GAS  /tmp/ccF4KpLF.s 			page 18


 293      73612067 
 293      7265656E 
 293      00
 294              		.section	.text.main,"ax",%progbits
 295              		.align	1
 296              		.global	main
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu fpv4-sp-d16
 302              	main:
 303              	.LFB953:
 100:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 304              		.loc 1 100 1 view -0
 305              		.cfi_startproc
 306              		@ Volatile: function does not return.
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309 0000 08B5     		push	{r3, lr}
 310              	.LCFI8:
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 3, -8
 313              		.cfi_offset 14, -4
 102:Core/Src/main.c ****   // txrx = 0;
 314              		.loc 1 102 4 view .LVU66
 102:Core/Src/main.c ****   // txrx = 0;
 315              		.loc 1 102 9 is_stmt 0 view .LVU67
 316 0002 6A4B     		ldr	r3, .L39
 317 0004 0122     		movs	r2, #1
 318 0006 1A60     		str	r2, [r3]
 109:Core/Src/main.c **** 
 319              		.loc 1 109 3 is_stmt 1 view .LVU68
 320 0008 FFF7FEFF 		bl	HAL_Init
 321              	.LVL8:
 116:Core/Src/main.c **** 
 322              		.loc 1 116 3 view .LVU69
 323 000c FFF7FEFF 		bl	SystemClock_Config
 324              	.LVL9:
 119:Core/Src/main.c **** 
 325              		.loc 1 119 3 view .LVU70
 326 0010 FFF7FEFF 		bl	PeriphCommonClock_Config
 327              	.LVL10:
 126:Core/Src/main.c ****   MX_USART1_UART_Init();
 328              		.loc 1 126 3 view .LVU71
 329 0014 FFF7FEFF 		bl	MX_GPIO_Init
 330              	.LVL11:
 127:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 331              		.loc 1 127 3 view .LVU72
 332 0018 FFF7FEFF 		bl	MX_USART1_UART_Init
 333              	.LVL12:
 128:Core/Src/main.c ****   MX_TIM2_Init();
 334              		.loc 1 128 3 view .LVU73
 335 001c FFF7FEFF 		bl	MX_LPUART1_UART_Init
 336              	.LVL13:
 129:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 337              		.loc 1 129 3 view .LVU74
 338 0020 FFF7FEFF 		bl	MX_TIM2_Init
ARM GAS  /tmp/ccF4KpLF.s 			page 19


 339              	.LVL14:
 340 0024 1AE0     		b	.L16
 341              	.L18:
 147:Core/Src/main.c ****       }
 342              		.loc 1 147 9 discriminator 3 view .LVU75
 147:Core/Src/main.c ****       }
 343              		.loc 1 147 28 is_stmt 0 discriminator 3 view .LVU76
 344 0026 624A     		ldr	r2, .L39+4
 345 0028 0021     		movs	r1, #0
 346 002a D154     		strb	r1, [r2, r3]
 145:Core/Src/main.c ****       {
 347              		.loc 1 145 28 is_stmt 1 discriminator 3 view .LVU77
 145:Core/Src/main.c ****       {
 348              		.loc 1 145 29 is_stmt 0 discriminator 3 view .LVU78
 349 002c 0133     		adds	r3, r3, #1
 350 002e 614A     		ldr	r2, .L39+8
 351 0030 1360     		str	r3, [r2]
 352              	.L17:
 145:Core/Src/main.c ****       {
 353              		.loc 1 145 18 is_stmt 1 discriminator 1 view .LVU79
 145:Core/Src/main.c ****       {
 354              		.loc 1 145 20 is_stmt 0 discriminator 1 view .LVU80
 355 0032 604B     		ldr	r3, .L39+8
 356 0034 1B68     		ldr	r3, [r3]
 145:Core/Src/main.c ****       {
 357              		.loc 1 145 5 discriminator 1 view .LVU81
 358 0036 632B     		cmp	r3, #99
 359 0038 F5DD     		ble	.L18
 153:Core/Src/main.c ****     i = 0;
 360              		.loc 1 153 5 is_stmt 1 view .LVU82
 361 003a 5D4C     		ldr	r4, .L39+4
 362 003c 4FF47A73 		mov	r3, #1000
 363 0040 6422     		movs	r2, #100
 364 0042 2146     		mov	r1, r4
 365 0044 5C48     		ldr	r0, .L39+12
 366 0046 FFF7FEFF 		bl	HAL_UART_Receive
 367              	.LVL15:
 154:Core/Src/main.c ****     
 368              		.loc 1 154 5 view .LVU83
 154:Core/Src/main.c ****     
 369              		.loc 1 154 7 is_stmt 0 view .LVU84
 370 004a 5A4B     		ldr	r3, .L39+8
 371 004c 0022     		movs	r2, #0
 372 004e 1A60     		str	r2, [r3]
 156:Core/Src/main.c ****     // if nothing received, repeat the receive proceedure //
 373              		.loc 1 156 5 is_stmt 1 view .LVU85
 374 0050 2146     		mov	r1, r4
 375 0052 5A48     		ldr	r0, .L39+16
 376 0054 FFF7FEFF 		bl	printf
 377              	.LVL16:
 158:Core/Src/main.c ****       {
 378              		.loc 1 158 5 view .LVU86
 158:Core/Src/main.c ****       {
 379              		.loc 1 158 24 is_stmt 0 view .LVU87
 380 0058 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 158:Core/Src/main.c ****       {
 381              		.loc 1 158 8 view .LVU88
ARM GAS  /tmp/ccF4KpLF.s 			page 20


 382 005a 1BB9     		cbnz	r3, .L35
 383              	.L16:
 138:Core/Src/main.c ****   {
 384              		.loc 1 138 3 is_stmt 1 view .LVU89
 145:Core/Src/main.c ****       {
 385              		.loc 1 145 5 view .LVU90
 145:Core/Src/main.c ****       {
 386              		.loc 1 145 12 is_stmt 0 view .LVU91
 387 005c 554B     		ldr	r3, .L39+8
 388 005e 0022     		movs	r2, #0
 389 0060 1A60     		str	r2, [r3]
 145:Core/Src/main.c ****       {
 390              		.loc 1 145 5 view .LVU92
 391 0062 E6E7     		b	.L17
 392              	.L35:
 162:Core/Src/main.c **** 
 393              		.loc 1 162 5 is_stmt 1 view .LVU93
 162:Core/Src/main.c **** 
 394              		.loc 1 162 7 is_stmt 0 view .LVU94
 395 0064 534B     		ldr	r3, .L39+8
 396 0066 0022     		movs	r2, #0
 397 0068 1A60     		str	r2, [r3]
 166:Core/Src/main.c ****       {
 398              		.loc 1 166 5 is_stmt 1 view .LVU95
 399              	.L20:
 166:Core/Src/main.c ****       {
 400              		.loc 1 166 18 discriminator 1 view .LVU96
 166:Core/Src/main.c ****       {
 401              		.loc 1 166 22 is_stmt 0 discriminator 1 view .LVU97
 402 006a 5148     		ldr	r0, .L39+4
 403 006c FFF7FEFF 		bl	strlen
 404              	.LVL17:
 166:Core/Src/main.c ****       {
 405              		.loc 1 166 20 discriminator 1 view .LVU98
 406 0070 504B     		ldr	r3, .L39+8
 407 0072 1B68     		ldr	r3, [r3]
 166:Core/Src/main.c ****       {
 408              		.loc 1 166 5 discriminator 1 view .LVU99
 409 0074 9842     		cmp	r0, r3
 410 0076 09D9     		bls	.L21
 168:Core/Src/main.c ****           {
 411              		.loc 1 168 9 is_stmt 1 view .LVU100
 168:Core/Src/main.c ****           {
 412              		.loc 1 168 28 is_stmt 0 view .LVU101
 413 0078 4D4A     		ldr	r2, .L39+4
 414 007a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 168:Core/Src/main.c ****           {
 415              		.loc 1 168 12 view .LVU102
 416 007c 2A2A     		cmp	r2, #42
 417 007e 05D0     		beq	.L21
 170:Core/Src/main.c ****           }
 418              		.loc 1 170 13 is_stmt 1 discriminator 2 view .LVU103
 170:Core/Src/main.c ****           }
 419              		.loc 1 170 24 is_stmt 0 discriminator 2 view .LVU104
 420 0080 4F49     		ldr	r1, .L39+20
 421 0082 CA54     		strb	r2, [r1, r3]
 166:Core/Src/main.c ****       {
ARM GAS  /tmp/ccF4KpLF.s 			page 21


 422              		.loc 1 166 48 is_stmt 1 discriminator 2 view .LVU105
 166:Core/Src/main.c ****       {
 423              		.loc 1 166 49 is_stmt 0 discriminator 2 view .LVU106
 424 0084 0133     		adds	r3, r3, #1
 425 0086 4B4A     		ldr	r2, .L39+8
 426 0088 1360     		str	r3, [r2]
 427 008a EEE7     		b	.L20
 428              	.L21:
 177:Core/Src/main.c ****       { 
 429              		.loc 1 177 5 is_stmt 1 view .LVU107
 177:Core/Src/main.c ****       { 
 430              		.loc 1 177 9 is_stmt 0 view .LVU108
 431 008c 4D49     		ldr	r1, .L39+24
 432 008e 4C48     		ldr	r0, .L39+20
 433 0090 FFF7FEFF 		bl	strcmp
 434              	.LVL18:
 177:Core/Src/main.c ****       { 
 435              		.loc 1 177 8 view .LVU109
 436 0094 0028     		cmp	r0, #0
 437 0096 E1D1     		bne	.L16
 179:Core/Src/main.c ****         // message format command*led*status* //
 438              		.loc 1 179 9 is_stmt 1 view .LVU110
 439 0098 4B48     		ldr	r0, .L39+28
 440 009a FFF7FEFF 		bl	printf
 441              	.LVL19:
 185:Core/Src/main.c ****         for (i = i + 1 ; i < strlen(uartreadmessage) ; i++)
 442              		.loc 1 185 9 view .LVU111
 185:Core/Src/main.c ****         for (i = i + 1 ; i < strlen(uartreadmessage) ; i++)
 443              		.loc 1 185 11 is_stmt 0 view .LVU112
 444 009e 4B4B     		ldr	r3, .L39+32
 445 00a0 0022     		movs	r2, #0
 446 00a2 1A60     		str	r2, [r3]
 186:Core/Src/main.c ****           {
 447              		.loc 1 186 9 is_stmt 1 view .LVU113
 186:Core/Src/main.c ****           {
 448              		.loc 1 186 20 is_stmt 0 view .LVU114
 449 00a4 434A     		ldr	r2, .L39+8
 450 00a6 1368     		ldr	r3, [r2]
 451 00a8 0133     		adds	r3, r3, #1
 186:Core/Src/main.c ****           {
 452              		.loc 1 186 16 view .LVU115
 453 00aa 1360     		str	r3, [r2]
 186:Core/Src/main.c ****           {
 454              		.loc 1 186 9 view .LVU116
 455 00ac 08E0     		b	.L23
 456              	.L36:
 190:Core/Src/main.c ****                 j++;
 457              		.loc 1 190 17 is_stmt 1 discriminator 2 view .LVU117
 190:Core/Src/main.c ****                 j++;
 458              		.loc 1 190 20 is_stmt 0 discriminator 2 view .LVU118
 459 00ae 4748     		ldr	r0, .L39+32
 460 00b0 0268     		ldr	r2, [r0]
 190:Core/Src/main.c ****                 j++;
 461              		.loc 1 190 24 discriminator 2 view .LVU119
 462 00b2 474C     		ldr	r4, .L39+36
 463 00b4 A154     		strb	r1, [r4, r2]
 191:Core/Src/main.c ****               }
ARM GAS  /tmp/ccF4KpLF.s 			page 22


 464              		.loc 1 191 17 is_stmt 1 discriminator 2 view .LVU120
 191:Core/Src/main.c ****               }
 465              		.loc 1 191 18 is_stmt 0 discriminator 2 view .LVU121
 466 00b6 0132     		adds	r2, r2, #1
 467 00b8 0260     		str	r2, [r0]
 186:Core/Src/main.c ****           {
 468              		.loc 1 186 56 is_stmt 1 discriminator 2 view .LVU122
 186:Core/Src/main.c ****           {
 469              		.loc 1 186 57 is_stmt 0 discriminator 2 view .LVU123
 470 00ba 0133     		adds	r3, r3, #1
 471 00bc 3D4A     		ldr	r2, .L39+8
 472 00be 1360     		str	r3, [r2]
 473              	.L23:
 186:Core/Src/main.c ****           {
 474              		.loc 1 186 26 is_stmt 1 discriminator 1 view .LVU124
 186:Core/Src/main.c ****           {
 475              		.loc 1 186 30 is_stmt 0 discriminator 1 view .LVU125
 476 00c0 3B48     		ldr	r0, .L39+4
 477 00c2 FFF7FEFF 		bl	strlen
 478              	.LVL20:
 186:Core/Src/main.c ****           {
 479              		.loc 1 186 28 discriminator 1 view .LVU126
 480 00c6 3B4B     		ldr	r3, .L39+8
 481 00c8 1B68     		ldr	r3, [r3]
 186:Core/Src/main.c ****           {
 482              		.loc 1 186 9 discriminator 1 view .LVU127
 483 00ca 9842     		cmp	r0, r3
 484 00cc 03D9     		bls	.L24
 188:Core/Src/main.c ****               {
 485              		.loc 1 188 13 is_stmt 1 view .LVU128
 188:Core/Src/main.c ****               {
 486              		.loc 1 188 32 is_stmt 0 view .LVU129
 487 00ce 384A     		ldr	r2, .L39+4
 488 00d0 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 188:Core/Src/main.c ****               {
 489              		.loc 1 188 16 view .LVU130
 490 00d2 2A29     		cmp	r1, #42
 491 00d4 EBD1     		bne	.L36
 492              	.L24:
 195:Core/Src/main.c ****         printf("led %s", led);
 493              		.loc 1 195 9 is_stmt 1 view .LVU131
 195:Core/Src/main.c ****         printf("led %s", led);
 494              		.loc 1 195 11 is_stmt 0 view .LVU132
 495 00d6 3D4B     		ldr	r3, .L39+32
 496 00d8 0022     		movs	r2, #0
 497 00da 1A60     		str	r2, [r3]
 196:Core/Src/main.c ****         for (i = i + 1 ; i < strlen(uartreadmessage) ; i++)
 498              		.loc 1 196 9 is_stmt 1 view .LVU133
 499 00dc 3C49     		ldr	r1, .L39+36
 500 00de 3D48     		ldr	r0, .L39+40
 501 00e0 FFF7FEFF 		bl	printf
 502              	.LVL21:
 197:Core/Src/main.c ****           {
 503              		.loc 1 197 9 view .LVU134
 197:Core/Src/main.c ****           {
 504              		.loc 1 197 20 is_stmt 0 view .LVU135
 505 00e4 334A     		ldr	r2, .L39+8
ARM GAS  /tmp/ccF4KpLF.s 			page 23


 506 00e6 1368     		ldr	r3, [r2]
 507 00e8 0133     		adds	r3, r3, #1
 197:Core/Src/main.c ****           {
 508              		.loc 1 197 16 view .LVU136
 509 00ea 1360     		str	r3, [r2]
 510              	.L26:
 197:Core/Src/main.c ****           {
 511              		.loc 1 197 26 is_stmt 1 discriminator 1 view .LVU137
 197:Core/Src/main.c ****           {
 512              		.loc 1 197 30 is_stmt 0 discriminator 1 view .LVU138
 513 00ec 3048     		ldr	r0, .L39+4
 514 00ee FFF7FEFF 		bl	strlen
 515              	.LVL22:
 197:Core/Src/main.c ****           {
 516              		.loc 1 197 28 discriminator 1 view .LVU139
 517 00f2 304B     		ldr	r3, .L39+8
 518 00f4 1B68     		ldr	r3, [r3]
 197:Core/Src/main.c ****           {
 519              		.loc 1 197 9 discriminator 1 view .LVU140
 520 00f6 9842     		cmp	r0, r3
 521 00f8 0DD9     		bls	.L27
 199:Core/Src/main.c ****               {
 522              		.loc 1 199 13 is_stmt 1 view .LVU141
 199:Core/Src/main.c ****               {
 523              		.loc 1 199 32 is_stmt 0 view .LVU142
 524 00fa 2D4A     		ldr	r2, .L39+4
 525 00fc D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 199:Core/Src/main.c ****               {
 526              		.loc 1 199 16 view .LVU143
 527 00fe 2A29     		cmp	r1, #42
 528 0100 09D0     		beq	.L27
 201:Core/Src/main.c ****                 j++;
 529              		.loc 1 201 17 is_stmt 1 discriminator 2 view .LVU144
 201:Core/Src/main.c ****                 j++;
 530              		.loc 1 201 23 is_stmt 0 discriminator 2 view .LVU145
 531 0102 3248     		ldr	r0, .L39+32
 532 0104 0268     		ldr	r2, [r0]
 201:Core/Src/main.c ****                 j++;
 533              		.loc 1 201 27 discriminator 2 view .LVU146
 534 0106 344C     		ldr	r4, .L39+44
 535 0108 A154     		strb	r1, [r4, r2]
 202:Core/Src/main.c ****               }
 536              		.loc 1 202 17 is_stmt 1 discriminator 2 view .LVU147
 202:Core/Src/main.c ****               }
 537              		.loc 1 202 18 is_stmt 0 discriminator 2 view .LVU148
 538 010a 0132     		adds	r2, r2, #1
 539 010c 0260     		str	r2, [r0]
 197:Core/Src/main.c ****           {
 540              		.loc 1 197 56 is_stmt 1 discriminator 2 view .LVU149
 197:Core/Src/main.c ****           {
 541              		.loc 1 197 57 is_stmt 0 discriminator 2 view .LVU150
 542 010e 0133     		adds	r3, r3, #1
 543 0110 284A     		ldr	r2, .L39+8
 544 0112 1360     		str	r3, [r2]
 545 0114 EAE7     		b	.L26
 546              	.L27:
 207:Core/Src/main.c **** 
ARM GAS  /tmp/ccF4KpLF.s 			page 24


 547              		.loc 1 207 9 is_stmt 1 view .LVU151
 548 0116 3049     		ldr	r1, .L39+44
 549 0118 3048     		ldr	r0, .L39+48
 550 011a FFF7FEFF 		bl	printf
 551              	.LVL23:
 209:Core/Src/main.c ****           {
 552              		.loc 1 209 10 view .LVU152
 209:Core/Src/main.c ****           {
 553              		.loc 1 209 14 is_stmt 0 view .LVU153
 554 011e 3049     		ldr	r1, .L39+52
 555 0120 2B48     		ldr	r0, .L39+36
 556 0122 FFF7FEFF 		bl	strcmp
 557              	.LVL24:
 209:Core/Src/main.c ****           {
 558              		.loc 1 209 13 view .LVU154
 559 0126 B8B1     		cbz	r0, .L37
 221:Core/Src/main.c ****           {
 560              		.loc 1 221 14 is_stmt 1 view .LVU155
 221:Core/Src/main.c ****           {
 561              		.loc 1 221 18 is_stmt 0 view .LVU156
 562 0128 2E49     		ldr	r1, .L39+56
 563 012a 2948     		ldr	r0, .L39+36
 564 012c FFF7FEFF 		bl	strcmp
 565              	.LVL25:
 221:Core/Src/main.c ****           {
 566              		.loc 1 221 17 view .LVU157
 567 0130 20B3     		cbz	r0, .L38
 233:Core/Src/main.c ****           {
 568              		.loc 1 233 14 is_stmt 1 view .LVU158
 233:Core/Src/main.c ****           {
 569              		.loc 1 233 18 is_stmt 0 view .LVU159
 570 0132 2D49     		ldr	r1, .L39+60
 571 0134 2648     		ldr	r0, .L39+36
 572 0136 FFF7FEFF 		bl	strcmp
 573              	.LVL26:
 233:Core/Src/main.c ****           {
 574              		.loc 1 233 17 view .LVU160
 575 013a 0028     		cmp	r0, #0
 576 013c 8ED1     		bne	.L16
 235:Core/Src/main.c ****             if (strcmp(status, "0") == 0)
 577              		.loc 1 235 13 is_stmt 1 view .LVU161
 578 013e 2B48     		ldr	r0, .L39+64
 579 0140 FFF7FEFF 		bl	puts
 580              	.LVL27:
 236:Core/Src/main.c ****               {
 581              		.loc 1 236 13 view .LVU162
 236:Core/Src/main.c ****               {
 582              		.loc 1 236 17 is_stmt 0 view .LVU163
 583 0144 2A49     		ldr	r1, .L39+68
 584 0146 2448     		ldr	r0, .L39+44
 585 0148 FFF7FEFF 		bl	strcmp
 586              	.LVL28:
 236:Core/Src/main.c ****               {
 587              		.loc 1 236 16 view .LVU164
 588 014c 40BB     		cbnz	r0, .L33
 238:Core/Src/main.c ****               }
 589              		.loc 1 238 17 is_stmt 1 view .LVU165
ARM GAS  /tmp/ccF4KpLF.s 			page 25


 590 014e 0021     		movs	r1, #0
 591 0150 0120     		movs	r0, #1
 592 0152 FFF7FEFF 		bl	set_led
 593              	.LVL29:
 594 0156 81E7     		b	.L16
 595              	.L37:
 211:Core/Src/main.c ****             if (strcmp(status, "0") == 0)
 596              		.loc 1 211 13 view .LVU166
 597 0158 2648     		ldr	r0, .L39+72
 598 015a FFF7FEFF 		bl	puts
 599              	.LVL30:
 212:Core/Src/main.c ****               {
 600              		.loc 1 212 13 view .LVU167
 212:Core/Src/main.c ****               {
 601              		.loc 1 212 17 is_stmt 0 view .LVU168
 602 015e 2449     		ldr	r1, .L39+68
 603 0160 1D48     		ldr	r0, .L39+44
 604 0162 FFF7FEFF 		bl	strcmp
 605              	.LVL31:
 212:Core/Src/main.c ****               {
 606              		.loc 1 212 16 view .LVU169
 607 0166 20B9     		cbnz	r0, .L30
 214:Core/Src/main.c ****               }
 608              		.loc 1 214 17 is_stmt 1 view .LVU170
 609 0168 0021     		movs	r1, #0
 610 016a 0846     		mov	r0, r1
 611 016c FFF7FEFF 		bl	set_led
 612              	.LVL32:
 613 0170 74E7     		b	.L16
 614              	.L30:
 218:Core/Src/main.c ****               }
 615              		.loc 1 218 17 view .LVU171
 616 0172 0121     		movs	r1, #1
 617 0174 0020     		movs	r0, #0
 618 0176 FFF7FEFF 		bl	set_led
 619              	.LVL33:
 620 017a 6FE7     		b	.L16
 621              	.L38:
 223:Core/Src/main.c ****             if (strcmp(status, "0") == 0)
 622              		.loc 1 223 13 view .LVU172
 623 017c 1E48     		ldr	r0, .L39+76
 624 017e FFF7FEFF 		bl	puts
 625              	.LVL34:
 224:Core/Src/main.c ****               {
 626              		.loc 1 224 13 view .LVU173
 224:Core/Src/main.c ****               {
 627              		.loc 1 224 17 is_stmt 0 view .LVU174
 628 0182 1B49     		ldr	r1, .L39+68
 629 0184 1448     		ldr	r0, .L39+44
 630 0186 FFF7FEFF 		bl	strcmp
 631              	.LVL35:
 224:Core/Src/main.c ****               {
 632              		.loc 1 224 16 view .LVU175
 633 018a 20B9     		cbnz	r0, .L32
 226:Core/Src/main.c ****               }
 634              		.loc 1 226 17 is_stmt 1 view .LVU176
 635 018c 0021     		movs	r1, #0
ARM GAS  /tmp/ccF4KpLF.s 			page 26


 636 018e 0220     		movs	r0, #2
 637 0190 FFF7FEFF 		bl	set_led
 638              	.LVL36:
 639 0194 62E7     		b	.L16
 640              	.L32:
 230:Core/Src/main.c ****               }
 641              		.loc 1 230 17 view .LVU177
 642 0196 0121     		movs	r1, #1
 643 0198 0220     		movs	r0, #2
 644 019a FFF7FEFF 		bl	set_led
 645              	.LVL37:
 646 019e 5DE7     		b	.L16
 647              	.L33:
 242:Core/Src/main.c ****               }
 648              		.loc 1 242 17 view .LVU178
 649 01a0 0121     		movs	r1, #1
 650 01a2 0846     		mov	r0, r1
 651 01a4 FFF7FEFF 		bl	set_led
 652              	.LVL38:
 653 01a8 58E7     		b	.L16
 654              	.L40:
 655 01aa 00BF     		.align	2
 656              	.L39:
 657 01ac 00000000 		.word	txrx
 658 01b0 00000000 		.word	uartreadmessage
 659 01b4 00000000 		.word	i
 660 01b8 00000000 		.word	huart1
 661 01bc 00000000 		.word	.LC0
 662 01c0 00000000 		.word	.LANCHOR0
 663 01c4 18000000 		.word	.LC1
 664 01c8 24000000 		.word	.LC2
 665 01cc 00000000 		.word	j
 666 01d0 00000000 		.word	led
 667 01d4 38000000 		.word	.LC3
 668 01d8 00000000 		.word	status
 669 01dc 40000000 		.word	.LC4
 670 01e0 4C000000 		.word	.LC5
 671 01e4 64000000 		.word	.LC8
 672 01e8 78000000 		.word	.LC10
 673 01ec 80000000 		.word	.LC11
 674 01f0 60000000 		.word	.LC7
 675 01f4 54000000 		.word	.LC6
 676 01f8 6C000000 		.word	.LC9
 677              		.cfi_endproc
 678              	.LFE953:
 680              		.comm	j,4,4
 681              		.comm	i,4,4
 682              		.global	uartresponseled
 683              		.comm	status,2,4
 684              		.comm	led,10,4
 685              		.global	command
 686              		.comm	uartreadmessage,100,4
 687              		.comm	txrx,4,4
 688              		.global	RxMessage
 689              		.global	TxMessage
 690              		.section	.bss.RxMessage,"aw",%nobits
 691              		.align	2
ARM GAS  /tmp/ccF4KpLF.s 			page 27


 694              	RxMessage:
 695 0000 00000000 		.space	30
 695      00000000 
 695      00000000 
 695      00000000 
 695      00000000 
 696              		.section	.bss.command,"aw",%nobits
 697              		.align	2
 698              		.set	.LANCHOR0,. + 0
 701              	command:
 702 0000 00000000 		.space	100
 702      00000000 
 702      00000000 
 702      00000000 
 702      00000000 
 703              		.section	.data.TxMessage,"aw"
 704              		.align	2
 707              	TxMessage:
 708 0000 0A0D2070 		.ascii	"\012\015 ping\012\015\000"
 708      696E670A 
 708      0D00
 709              		.section	.data.uartresponseled,"aw"
 710              		.align	2
 713              	uartresponseled:
 714 0000 6F706572 		.ascii	"operation done!\012\000"
 714      6174696F 
 714      6E20646F 
 714      6E65210A 
 714      00
 715 0011 00000000 		.space	13
 715      00000000 
 715      00000000 
 715      00
 716              		.text
 717              	.Letext0:
 718              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 719              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 720              		.file 5 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/system_stm32wbxx.h"
 721              		.file 6 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/stm32wb55xx.h"
 722              		.file 7 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_def.h"
 723              		.file 8 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_dma.h"
 724              		.file 9 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_flash.h"
 725              		.file 10 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_gpio.h"
 726              		.file 11 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_rcc.h"
 727              		.file 12 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_rcc_ex.h"
 728              		.file 13 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_tim.h"
 729              		.file 14 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_uart.h"
 730              		.file 15 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal.h"
 731              		.file 16 "Core/Inc/usart.h"
 732              		.file 17 "Core/Inc/tim.h"
 733              		.file 18 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 734              		.file 19 "/usr/include/newlib/sys/_types.h"
 735              		.file 20 "/usr/include/newlib/sys/reent.h"
 736              		.file 21 "/usr/include/newlib/sys/lock.h"
 737              		.file 22 "../../lib/led/led.h"
 738              		.file 23 "/usr/include/newlib/stdlib.h"
 739              		.file 24 "Core/Inc/gpio.h"
ARM GAS  /tmp/ccF4KpLF.s 			page 28


 740              		.file 25 "/usr/include/newlib/stdio.h"
 741              		.file 26 "/usr/include/newlib/string.h"
 742              		.file 27 "<built-in>"
ARM GAS  /tmp/ccF4KpLF.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccF4KpLF.s:18     .text.Error_Handler:0000000000000000 $t
     /tmp/ccF4KpLF.s:26     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccF4KpLF.s:59     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccF4KpLF.s:66     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccF4KpLF.s:191    .text.SystemClock_Config:0000000000000080 $d
     /tmp/ccF4KpLF.s:196    .text.PeriphCommonClock_Config:0000000000000000 $t
     /tmp/ccF4KpLF.s:203    .text.PeriphCommonClock_Config:0000000000000000 PeriphCommonClock_Config
     /tmp/ccF4KpLF.s:258    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccF4KpLF.s:295    .text.main:0000000000000000 $t
     /tmp/ccF4KpLF.s:302    .text.main:0000000000000000 main
     /tmp/ccF4KpLF.s:657    .text.main:00000000000001ac $d
                            *COM*:0000000000000004 txrx
                            *COM*:0000000000000064 uartreadmessage
                            *COM*:0000000000000004 i
                            *COM*:0000000000000004 j
                            *COM*:000000000000000a led
                            *COM*:0000000000000002 status
     /tmp/ccF4KpLF.s:713    .data.uartresponseled:0000000000000000 uartresponseled
     /tmp/ccF4KpLF.s:701    .bss.command:0000000000000000 command
     /tmp/ccF4KpLF.s:694    .bss.RxMessage:0000000000000000 RxMessage
     /tmp/ccF4KpLF.s:707    .data.TxMessage:0000000000000000 TxMessage
     /tmp/ccF4KpLF.s:691    .bss.RxMessage:0000000000000000 $d
     /tmp/ccF4KpLF.s:697    .bss.command:0000000000000000 $d
     /tmp/ccF4KpLF.s:704    .data.TxMessage:0000000000000000 $d
     /tmp/ccF4KpLF.s:710    .data.uartresponseled:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
MX_LPUART1_UART_Init
MX_TIM2_Init
HAL_UART_Receive
printf
strlen
strcmp
puts
set_led
huart1
